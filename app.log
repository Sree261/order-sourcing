
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)

2025-07-06T18:23:51.887Z  INFO 3019 --- [           main] c.o.e.OrderSourcingEngineApplication     : Starting OrderSourcingEngineApplication v0.0.1-SNAPSHOT using Java 17.0.15 with PID 3019 (/mnt/c/Learnings/Spring boot/order-sourcing-engine/order-sourcing-engine/target/order-sourcing-engine-0.0.1-SNAPSHOT.jar started by sreer in /mnt/c/Learnings/Spring boot/order-sourcing-engine/order-sourcing-engine)
2025-07-06T18:23:51.896Z  INFO 3019 --- [           main] c.o.e.OrderSourcingEngineApplication     : No active profile set, falling back to 1 default profile: "default"
2025-07-06T18:23:54.355Z  INFO 3019 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-06T18:23:54.584Z  INFO 3019 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 207 ms. Found 6 JPA repository interfaces.
2025-07-06T18:23:56.292Z  INFO 3019 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-07-06T18:23:56.316Z  INFO 3019 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-06T18:23:56.317Z  INFO 3019 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.8]
2025-07-06T18:23:56.458Z  INFO 3019 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-06T18:23:56.459Z  INFO 3019 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4377 ms
2025-07-06T18:23:56.530Z  INFO 3019 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-06T18:23:57.326Z  INFO 3019 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:devdb user=SA
2025-07-06T18:23:57.331Z  INFO 3019 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-06T18:23:57.350Z  INFO 3019 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:devdb'
2025-07-06T18:23:57.777Z  INFO 3019 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-06T18:23:57.989Z  INFO 3019 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.2.Final
2025-07-06T18:23:57.994Z  INFO 3019 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2025-07-06T18:23:58.517Z  INFO 3019 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-07-06T18:23:58.991Z  INFO 3019 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-06T18:23:59.103Z  INFO 3019 --- [           main] org.hibernate.orm.dialect                : HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.1.214
2025-07-06T18:23:59.854Z  INFO 3019 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-07-06T18:24:01.947Z  INFO 3019 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: drop table if exists carrier_configuration cascade 
Hibernate: drop table if exists fulfillment_plan cascade 
Hibernate: drop table if exists inventory cascade 
Hibernate: drop table if exists location cascade 
Hibernate: drop table if exists location_filter cascade 
Hibernate: drop table if exists order_item cascade 
Hibernate: drop table if exists orders cascade 
Hibernate: drop table if exists orders_order_items cascade 
Hibernate: drop table if exists scoring_configuration cascade 
Hibernate: create table carrier_configuration (average_delay_hours integer, base_cost float(53), base_transit_days integer, carrier_priority integer, delivery_end_time time(6), delivery_start_time time(6), holiday_service boolean, id integer generated by default as identity, is_peak_season_service boolean, max_distance_km float(53), max_transit_days integer, max_value_limit float(53), next_pickup_time time(6), on_time_performance float(53), peak_season_delay_days integer, pickup_cutoff_time time(6), residential_delivery boolean, signature_required boolean, supports_cold_chain boolean, supports_hazmat boolean, supports_high_value boolean, transit_time_multiplier float(53), weekend_delivery boolean, weekend_pickup boolean, carrier_code varchar(255) not null, delivery_type varchar(255) not null, service_level varchar(255) not null, service_zones varchar(255), primary key (id))
Hibernate: create table fulfillment_plan (id integer generated by default as identity, location_id integer, order_id integer, processing_time_hours integer, quantity integer not null, transit_time_hours integer, estimated_delivery_date timestamp(6), estimated_ship_date timestamp(6), promise_date timestamp(6), delivery_type varchar(255), sku varchar(255), primary key (id))
Hibernate: create table inventory (id integer generated by default as identity, location_id integer, processing_time integer not null, quantity integer not null, sku varchar(255), primary key (id))
Hibernate: create table location (id integer generated by default as identity, latitude float(53) not null, longitude float(53) not null, transit_time integer not null, city varchar(255), country varchar(255), name varchar(255), state varchar(255), primary key (id))
Hibernate: create table location_filter (cache_ttl_minutes integer, execution_priority integer, is_active boolean not null, last_modified timestamp(6), description varchar(500), category varchar(255), created_by varchar(255), id varchar(255) not null, name varchar(255) not null, scoring_weights TEXT, version varchar(255), filter_script TEXT, scoring_script TEXT, primary key (id))
Hibernate: create table order_item (id integer generated by default as identity, quantity integer not null, delivery_type varchar(255), sku varchar(255), primary key (id))
Hibernate: create table orders (id integer generated by default as identity, latitude float(53) not null, longitude float(53) not null, city varchar(255), country varchar(255), order_id varchar(255), state varchar(255), primary key (id))
Hibernate: create table orders_order_items (order_items_id integer not null unique, orders_id integer not null)
Hibernate: create table scoring_configuration (base_confidence float(53), cache_ttl_minutes integer, distance_threshold float(53), distance_weight float(53), execution_priority integer, express_weight float(53), hazmat_adjustment float(53), high_value_penalty float(53), high_value_threshold float(53), inventory_weight float(53), is_active boolean not null, next_day_penalty float(53), peak_season_adjustment float(53), processing_time_weight float(53), same_day_penalty float(53), split_penalty_base float(53), split_penalty_exponent float(53), split_penalty_multiplier float(53), transit_time_weight float(53), weather_adjustment float(53), last_modified timestamp(6), description varchar(500), category varchar(255), created_by varchar(255), id varchar(255) not null, name varchar(255) not null, version varchar(255), custom_scoring_script TEXT, primary key (id))
Hibernate: alter table if exists fulfillment_plan add constraint FKgylghvjcpjwqcfw002f35ggw1 foreign key (location_id) references location
Hibernate: alter table if exists fulfillment_plan add constraint FKs6tlt46imc34mhtgm1apss80s foreign key (order_id) references orders
Hibernate: alter table if exists orders_order_items add constraint FK7nw03p9mxq154wvbsonaq0qrw foreign key (order_items_id) references order_item
Hibernate: alter table if exists orders_order_items add constraint FK5ojvnlddari3n1ktdm4krxtla foreign key (orders_id) references orders
2025-07-06T18:24:02.096Z  INFO 3019 --- [           main] o.h.t.s.i.e.GenerationTargetToDatabase   : HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2025-07-06T18:24:02.102Z  INFO 3019 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-06T18:24:02.923Z  INFO 3019 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-06T18:24:04.871Z  WARN 3019 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Hibernate: select l1_0.id,l1_0.cache_ttl_minutes,l1_0.category,l1_0.created_by,l1_0.description,l1_0.execution_priority,l1_0.filter_script,l1_0.is_active,l1_0.last_modified,l1_0.name,l1_0.scoring_script,l1_0.scoring_weights,l1_0.version from location_filter l1_0 where l1_0.is_active order by l1_0.execution_priority
2025-07-06T18:24:05.109Z  INFO 3019 --- [onPool-worker-1] e.s.i.LocationFilterExecutionServiceImpl : Pre-computing results for 0 active filters
2025-07-06T18:24:06.148Z  INFO 3019 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-07-06T18:24:06.174Z  INFO 3019 --- [           main] c.o.e.OrderSourcingEngineApplication     : Started OrderSourcingEngineApplication in 15.766 seconds (process running for 16.791)
2025-07-06T18:27:49.935Z  INFO 3019 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-06T18:27:49.936Z  INFO 3019 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-06T18:27:49.939Z  INFO 3019 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.is_active order by s1_0.execution_priority
2025-07-06T19:05:18.261Z  WARN 3019 --- [nio-8080-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.ordersourcing.engine.controller.SourcingController.sourceOrderDirect(com.ordersourcing.engine.dto.OrderDTO): [Field error in object 'orderDTO' on field 'tempOrderId': rejected value [null]; codes [NotBlank.orderDTO.tempOrderId,NotBlank.tempOrderId,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [orderDTO.tempOrderId,tempOrderId]; arguments []; default message [tempOrderId]]; default message [Temporary order ID is required]] ]
2025-07-06T19:05:48.682Z  INFO 3019 --- [nio-8080-exec-4] c.o.e.controller.SourcingController      : Received order sourcing request: OrderDTO{tempOrderId='TEST_ORDER_001', items=1, totalQty=2, location=[40.7128,-74.0060]}
2025-07-06T19:05:48.692Z  INFO 3019 --- [nio-8080-exec-4] c.o.e.s.impl.BatchSourcingServiceImpl    : Using SEQUENTIAL strategy for order: TEST_ORDER_001 with 1 items
Hibernate: select l1_0.id,l1_0.cache_ttl_minutes,l1_0.category,l1_0.created_by,l1_0.description,l1_0.execution_priority,l1_0.filter_script,l1_0.is_active,l1_0.last_modified,l1_0.name,l1_0.scoring_script,l1_0.scoring_weights,l1_0.version from location_filter l1_0 where l1_0.id=? and l1_0.is_active
Hibernate: select l1_0.id,l1_0.city,l1_0.country,l1_0.latitude,l1_0.longitude,l1_0.name,l1_0.state,l1_0.transit_time from location l1_0
Hibernate: select i1_0.id,i1_0.location_id,i1_0.processing_time,i1_0.quantity,i1_0.sku from inventory i1_0 where i1_0.sku=? and i1_0.quantity>?
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select c1_0.id,c1_0.average_delay_hours,c1_0.base_cost,c1_0.base_transit_days,c1_0.carrier_code,c1_0.carrier_priority,c1_0.delivery_end_time,c1_0.delivery_start_time,c1_0.delivery_type,c1_0.holiday_service,c1_0.is_peak_season_service,c1_0.max_distance_km,c1_0.max_transit_days,c1_0.max_value_limit,c1_0.next_pickup_time,c1_0.on_time_performance,c1_0.peak_season_delay_days,c1_0.pickup_cutoff_time,c1_0.residential_delivery,c1_0.service_level,c1_0.service_zones,c1_0.signature_required,c1_0.supports_cold_chain,c1_0.supports_hazmat,c1_0.supports_high_value,c1_0.transit_time_multiplier,c1_0.weekend_delivery,c1_0.weekend_pickup from carrier_configuration c1_0 where c1_0.delivery_type=? and (c1_0.max_distance_km is null or c1_0.max_distance_km>=?) order by c1_0.carrier_priority
Hibernate: select i1_0.id,i1_0.location_id,i1_0.processing_time,i1_0.quantity,i1_0.sku from inventory i1_0 where i1_0.sku=? and i1_0.quantity>?
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
2025-07-06T19:06:11.261Z  INFO 3019 --- [nio-8080-exec-6] c.o.e.controller.SourcingController      : Received order sourcing request: OrderDTO{tempOrderId='TEST_ORDER_002', items=1, totalQty=2, location=[40.7128,-74.0060]}
2025-07-06T19:06:11.262Z  INFO 3019 --- [nio-8080-exec-6] c.o.e.s.impl.BatchSourcingServiceImpl    : Using SEQUENTIAL strategy for order: TEST_ORDER_002 with 1 items
Hibernate: select l1_0.id,l1_0.cache_ttl_minutes,l1_0.category,l1_0.created_by,l1_0.description,l1_0.execution_priority,l1_0.filter_script,l1_0.is_active,l1_0.last_modified,l1_0.name,l1_0.scoring_script,l1_0.scoring_weights,l1_0.version from location_filter l1_0 where l1_0.id=? and l1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select i1_0.id,i1_0.location_id,i1_0.processing_time,i1_0.quantity,i1_0.sku from inventory i1_0 where i1_0.sku=? and i1_0.quantity>?
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
Hibernate: select s1_0.id,s1_0.base_confidence,s1_0.cache_ttl_minutes,s1_0.category,s1_0.created_by,s1_0.custom_scoring_script,s1_0.description,s1_0.distance_threshold,s1_0.distance_weight,s1_0.execution_priority,s1_0.express_weight,s1_0.hazmat_adjustment,s1_0.high_value_penalty,s1_0.high_value_threshold,s1_0.inventory_weight,s1_0.is_active,s1_0.last_modified,s1_0.name,s1_0.next_day_penalty,s1_0.peak_season_adjustment,s1_0.processing_time_weight,s1_0.same_day_penalty,s1_0.split_penalty_base,s1_0.split_penalty_exponent,s1_0.split_penalty_multiplier,s1_0.transit_time_weight,s1_0.version,s1_0.weather_adjustment from scoring_configuration s1_0 where s1_0.id=? and s1_0.is_active
2025-07-06T19:08:20.440Z  INFO 3019 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-06T19:08:20.443Z  INFO 3019 --- [ionShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
Hibernate: drop table if exists carrier_configuration cascade 
Hibernate: drop table if exists fulfillment_plan cascade 
Hibernate: drop table if exists inventory cascade 
Hibernate: drop table if exists location cascade 
Hibernate: drop table if exists location_filter cascade 
Hibernate: drop table if exists order_item cascade 
Hibernate: drop table if exists orders cascade 
Hibernate: drop table if exists orders_order_items cascade 
Hibernate: drop table if exists scoring_configuration cascade 
2025-07-06T19:08:20.612Z  INFO 3019 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-06T19:08:20.616Z  INFO 3019 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
